import unittest

import conditionDatabase
import conditionError


class TestConditionDatabase( unittest.TestCase ):
    
    def setUp( self ):
        self.gt = conditionDatabase.GlobalTagChecker( "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG", "" )
        self.db = conditionDatabase.ConditionDBChecker("frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "")
        
    def testGTConstructor( self ):
        #this is the construction of the correct instance
        self.assertTrue( isinstance( self.gt._connectionString, str ) )
        self.assertTrue( isinstance( self.gt._authPath, str ) )
        self.assertTrue( isinstance( self.gt._dbStarted, bool ) )
        self.assertEqual( self.gt._globalTagName, None )
        self.assertEqual( self.gt._connectionString, "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertFalse( self.gt._dbStarted )
        #now wrong constructors
        #constructor with wrong account: unfortunately does!
        gt1 = conditionDatabase.GlobalTagChecker( "frontier://FrontierProd/CMS_COND_DUMMY", "" )
        #wrong service: it fails!
        self.assertRaises( conditionError.ConditionError, gt1.__init__, "frontier://FrontierFoo/CMS_COND_DUMMY", "" )
        #invalid connection string: it fails!
        self.assertRaises( conditionError.ConditionError, gt1.__init__, "foo://Foo/BAR", "" )
    
    def testInitGT( self ):
        isReconnected = self.gt.initGT( "GR_P_V41" )
        self.assertTrue( isinstance( self.gt._globalTagName, str ) )
        self.assertTrue( isinstance( self.gt._connectionString, str ) )
        self.assertTrue( isinstance( self.gt._authPath, str ) )
        self.assertTrue( isinstance( self.gt._dbStarted, bool ) )
        self.assertTrue( isinstance( isReconnected, bool ) )
        self.assertEqual( self.gt._globalTagName, "GR_P_V41" )
        self.assertEqual( self.gt._connectionString, "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertTrue( self.gt._dbStarted )
        self.assertTrue( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V41" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V41" )
        self.assertTrue( isinstance( isReconnected, bool ) )
        self.assertFalse( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V41", "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V41" )
        self.assertEqual( self.gt._connectionString, "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertTrue( self.gt._dbStarted )
        self.assertFalse( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V41", "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" , "" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V41" )
        self.assertEqual( self.gt._connectionString, "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertTrue( self.gt._dbStarted )
        self.assertFalse( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V40" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V40" )
        self.assertEqual( self.gt._connectionString, "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertTrue( self.gt._dbStarted )
        self.assertTrue( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V40", "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V40" )
        self.assertEqual( self.gt._connectionString, "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertTrue( self.gt._dbStarted )
        self.assertFalse( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V40", "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" , "" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V40" )
        self.assertEqual( self.gt._connectionString, "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertTrue( self.gt._dbStarted )
        self.assertFalse( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V40", "frontier://PromptProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V40" )
        self.assertEqual( self.gt._connectionString, "frontier://PromptProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertTrue( self.gt._dbStarted )
        self.assertTrue( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V40", "frontier://PromptProd/CMS_COND_31X_GLOBALTAG" , "" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V40" )
        self.assertEqual( self.gt._connectionString, "frontier://PromptProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertTrue( self.gt._dbStarted )
        self.assertFalse( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V40", authPath =  "." )
        self.assertEqual( self.gt._globalTagName, "GR_P_V40" )
        self.assertEqual( self.gt._connectionString, "frontier://PromptProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "." )
        self.assertTrue( self.gt._dbStarted )
        self.assertTrue( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V40", "frontier://PromptProd/CMS_COND_31X_GLOBALTAG" , "." )
        self.assertEqual( self.gt._globalTagName, "GR_P_V40" )
        self.assertEqual( self.gt._connectionString, "frontier://PromptProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "." )
        self.assertTrue( self.gt._dbStarted )
        self.assertFalse( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V40", "oracle://cms_orcon_adg/CMS_COND_31X_GLOBALTAG" , "/afs/cern.ch/cms/DB/conddb" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V40" )
        self.assertEqual( self.gt._connectionString, "oracle://cms_orcon_adg/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "/afs/cern.ch/cms/DB/conddb" )
        self.assertTrue( self.gt._dbStarted )
        self.assertTrue( isReconnected )
        isReconnected = self.gt.initGT( "GR_P_V41", "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" , "" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V41" )
        self.assertEqual( self.gt._connectionString, "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertTrue( self.gt._dbStarted )
        self.assertTrue( isReconnected )
        #wrong GT name
        self.assertRaises( conditionError.ConditionError, self.gt.initGT, "GR_Z_V40" )
        #correct GT but wrong account
        self.assertRaises( conditionError.ConditionError, self.gt.initGT, "GR_P_V40", "frontier://FrontierProd/CMS_COND_DUMMY" )
        #correct GT name but with connection string containing a non existing service
        self.assertRaises( conditionError.ConditionError, self.gt.initGT, "GR_P_V40", "frontier://FrontierFoo/CMS_COND_DUMMY" )
        #correct GT name but with invalid connection string
        self.assertRaises( conditionError.ConditionError, self.gt.initGT, "GR_P_V40", "foo://Foo/BAR" )
        #re-init GT with correct parameters
        isReconnected = self.gt.initGT( "GR_P_V41", "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" , "" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V41" )
        self.assertEqual( self.gt._connectionString, "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertTrue( self.gt._dbStarted )
        self.assertTrue( isReconnected )

    def testCheckTag( self ):
        self.assertRaises( conditionError.ConditionError, self.gt.checkTag, "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" )
        isReconnected = self.gt.initGT( "GR_P_V41", "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" , "" )
        self.assertEqual( self.gt._globalTagName, "GR_P_V41" )
        self.assertEqual( self.gt._connectionString, "frontier://FrontierProd/CMS_COND_31X_GLOBALTAG" )
        self.assertEqual( self.gt._authPath, "" )
        self.assertTrue( self.gt._dbStarted )
        self.assertTrue( isReconnected )
        self.assertTrue( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertTrue( self. gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" ) )
        
        self.assertTrue( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" , True ) )
        self.assertTrue( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt" , True ) )
        self.assertTrue( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "runinfo_31X_hlt", True ) )
        
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "runinfo_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "runinfo_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "runinfo_31X_hlt", True ) )

        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )

        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "oracle://CMSARC_LB/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierArch/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertRaises( conditionError.ConditionError, self.gt.checkTag, "oracle://CMSARC_LB/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True )
        self.assertRaises( conditionError.ConditionError, self.gt.checkTag, "frontier://FrontierArch/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True )

        self.gt.initGT( "GR_E_V30" )
        self.assertTrue( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertTrue( self. gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        
        self.assertTrue( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" , True ) )
        self.assertTrue( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" , True ) )
        self.assertTrue( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )

        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )

        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )

        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "oracle://CMSARC_LB/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierArch/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertRaises( conditionError.ConditionError, self.gt.checkTag, "oracle://CMSARC_LB/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True )
        self.assertRaises( conditionError.ConditionError, self.gt.checkTag, "frontier://FrontierArch/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True )
        
        self.gt.initGT( "GR_H_V29" )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self. gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" ) )

        self.assertTrue( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" , True ) )
        self.assertTrue( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt" , True ) )
        self.assertTrue( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertTrue( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "runinfo_start_31X_hlt", True ) )

        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "runinfo_start_31X_hlt", True ) )

        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_31X_RUN_INFO", "RunInfo_v1_mc", True ) )

        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "oracle://CMSARC_LB/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierArch/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_adg/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/FrontierProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier1.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier2.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier3.cern.ch:8000/FrontierProd)(serverurl=http://cmsfrontier4.cern.ch:8000/FrontierProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc" ) )
        self.assertFalse( self.gt.checkTag( "frontier://PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://cmsfrontier.cern.ch:8000/PromptProd/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier.cern.ch:3128)(proxyurl=http://cmst0frontier1.cern.ch:3128)(proxyurl=http://cmst0frontier2.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier1.cern.ch:3128)(backupproxyurl=http://cmsbpfrontier2.cern.ch:3128)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier1.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier2.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier3.cern.ch:8000/PromptProd)(serverurl=http://cmsfrontier4.cern.ch:8000/PromptProd)/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "oracle://cms_orcon_prod/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertFalse( self.gt.checkTag( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)(failovertoserver=no)/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True ) )
        self.assertRaises( conditionError.ConditionError, self.gt.checkTag, "oracle://CMSARC_LB/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True )
        self.assertRaises( conditionError.ConditionError, self.gt.checkTag, "frontier://FrontierArch/CMS_COND_RUN_INFO", "RunInfo_v1_mc", True )

    def testDBConstrcutor( self ):
        #this is the construction of the correct instance
        self.assertTrue( isinstance( self.db._connectionString, str ) )
        self.assertTrue( isinstance( self.db._authPath, str ) )
        self.assertTrue( isinstance( self.db._dbStarted, bool ) )
        self.assertEqual( self.db._connectionString, "frontier://FrontierProd/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._authPath, "" )
        self.assertFalse( self.db._dbStarted )
        #now wrong constructors
        #constructor with wrong account: unfortunately does!
        db1 = conditionDatabase.ConditionDBChecker( "frontier://FrontierProd/CMS_COND_DUMMY", "" )
        #wrong service: it fails!
        self.assertRaises( conditionError.ConditionError, db1.__init__, "frontier://FrontierFoo/CMS_COND_DUMMY", "" )
        #invalid connection string: it fails!
        self.assertRaises( conditionError.ConditionError, db1.__init__, "foo://Foo/BAR", "" )
        #sqlite should work, no chack on the connection string is done!
        db1 = conditionDatabase.ConditionDBChecker( "sqlite_file:dummy.db", "" )

    def testInitDB( self ):
        isReconnected = self.db._initDB( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO" )
        self.assertTrue( isinstance( self.db._connectionString, str ) )
        self.assertTrue( isinstance( self.db._authPath, str ) )
        self.assertTrue( isinstance( self.db._dbStarted, bool ) )
        self.assertTrue( isinstance( isReconnected, bool ) )
        self.assertEqual( self.db._connectionString, "frontier://FrontierProd/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._authPath, "" )
        self.assertTrue( self.db._dbStarted )
        self.assertTrue( isReconnected )
        isReconnected = self.db._initDB( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._connectionString, "frontier://FrontierProd/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._authPath, "" )
        self.assertTrue( self.db._dbStarted )
        self.assertFalse( isReconnected )
        isReconnected = self.db._initDB( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO", "" )
        self.assertEqual( self.db._connectionString, "frontier://FrontierProd/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._authPath, "" )
        self.assertTrue( self.db._dbStarted )
        self.assertFalse( isReconnected )
        isReconnected = self.db._initDB( "frontier://PromptProd/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._connectionString, "frontier://PromptProd/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._authPath, "" )
        self.assertTrue( self.db._dbStarted )
        self.assertTrue( isReconnected )
        isReconnected = self.db._initDB( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "" )
        self.assertEqual( self.db._connectionString, "frontier://PromptProd/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._authPath, "" )
        self.assertTrue( self.db._dbStarted )
        self.assertFalse( isReconnected )
        isReconnected = self.db._initDB( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "." )
        self.assertEqual( self.db._connectionString, "frontier://PromptProd/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._authPath, "." )
        self.assertTrue( self.db._dbStarted )
        self.assertTrue( isReconnected )
        isReconnected = self.db._initDB( "frontier://PromptProd/CMS_COND_31X_RUN_INFO", "." )
        self.assertEqual( self.db._connectionString, "frontier://PromptProd/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._authPath, "." )
        self.assertTrue( self.db._dbStarted )
        self.assertFalse( isReconnected )
        isReconnected = self.db._initDB( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO", "/afs/cern.ch/cms/DB/conddb" )
        self.assertEqual( self.db._connectionString, "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._authPath, "/afs/cern.ch/cms/DB/conddb" )
        self.assertTrue( self.db._dbStarted )
        self.assertTrue( isReconnected )
        #FIXME: wrong account: it does not raise!!!
        isReconnected = self.db._initDB( "frontier://FrontierProd/CMS_COND_INVALID", "" )
        self.assertEqual( self.db._connectionString, "frontier://FrontierProd/CMS_COND_INVALID" )
        self.assertEqual( self.db._authPath, "" )
        self.assertTrue( self.db._dbStarted )
        self.assertTrue( isReconnected )
        ##self.assertRaises( conditionError.ConditionError, self.db._initDB, "frontier://FrontierProd/CMS_COND_INVALID" )
        #connection string containing a non existing service
        self.assertRaises( conditionError.ConditionError, self.db._initDB, "frontier://FrontierFoo/CMS_COND_DUMMY", "" )
        #with invalid connection string
        self.assertRaises( conditionError.ConditionError, self.db._initDB, "foo://Foo/BAR" )
        #re-init with correct parameters
        isReconnected = self.db._initDB( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO" , "" )
        self.assertEqual( self.db._connectionString, "frontier://FrontierProd/CMS_COND_31X_RUN_INFO" )
        self.assertEqual( self.db._authPath, "" )
        self.assertTrue( self.db._dbStarted )
        self.assertTrue( isReconnected )

    def testCheckDBTag( self ):
        self.assertTrue( self.db.checkTag( "RunInfo_v1_mc" ) )
        self.assertFalse( self.db.checkTag( "RunInfo_invalid" ) )
        #now a connection to a wrong account fails!
        db1 = conditionDatabase.ConditionDBChecker( "frontier://FrontierProd/CMS_COND_INVALID", "" )
        self.assertRaises( conditionError.ConditionError, db1.checkTag, "RunInfo_v1_mc" )

    def testIovCheckerFromConditionDBChecker( self ):
        import pluginCondDBPyInterface as condDB
        iov = self.db.iovSequence( "RunInfo_v1_mc" )
        allElements = iov.getAllElements()
        self.assertTrue( isinstance( allElements, list ) )
        self.assertEqual( len( allElements ), 1 )
        for elem in allElements:
            self.assertTrue( isinstance( elem, tuple ) )
            self.assertEqual( len( elem ), 2 )
            self.assertTrue( isinstance( elem[0], long ) )
            self.assertTrue( isinstance( elem[1], long ) )
        self.assertEqual( allElements, [ (1L, 4294967295L) ] )
        iov = self.db.iovSequence( 'runinfo_start_31X_hlt' )
        allElements = iov.getAllElements()
        self.assertTrue( isinstance( allElements, list ) )
        self.assertNotEqual( len( allElements ), 0 )
        for elem in allElements:
            self.assertTrue( isinstance( elem, tuple ) )
            self.assertEqual( len( elem ), 2 )
            self.assertTrue( isinstance( elem[0], long ) )
            self.assertTrue( isinstance( elem[1], long ) )
        allSinces = iov.getAllSinceValues()
        self.assertTrue( isinstance( allSinces, list ) )
        self.assertNotEqual( len( allSinces ), 0 )
        for elem in allSinces:
            self.assertTrue( isinstance( elem, long ) )
        self.assertTrue( isinstance( iov.comment(), str ) )
        self.assertTrue( isinstance( iov.firstSince(), long ) )
        self.assertTrue( isinstance( iov.iovToken(), str ) )
        self.assertTrue( isinstance( iov.lastSince(), long ) )
        self.assertTrue( isinstance( iov.lastTill(), long ) )
        allPayloads = iov.payloadClasses()
        self.assertTrue( isinstance( allPayloads, tuple ) )
        self.assertNotEqual( len( allPayloads ), 0 )
        self.assertEqual( len( allPayloads ), 1 )
        for elem in allPayloads:
            self.assertTrue( isinstance( elem, str ) )
            self.assertEqual( elem, "RunInfo" )
        self.assertEqual( iov.payloadContainer(), "RunInfo" )
        self.assertTrue( isinstance( iov.revision(), int ) )
        self.assertNotEqual( iov.size(), 0 )
        self.assertTrue( isinstance( iov.timestamp(), str ) )
        self.assertTrue( isinstance( iov.timetype(), condDB.timetype ) )
        self.assertRaises( conditionError.ConditionError, self.db.iovSequence, "RunInfo_dummy" )
        #now a connection to a wrong account fails!
        db1 = conditionDatabase.ConditionDBChecker( "frontier://FrontierProd/CMS_COND_INVALID", "" )
        self.assertRaises( conditionError.ConditionError, db1.iovSequence, "RunInfo_v1_mc" )
        #TODO: run the checks for a sqlite file containing only condition tables, not values

    def testIOVChecker( self ):
        import pluginCondDBPyInterface as condDB
        rdbms = condDB.RDBMS( "/afs/cern.ch/cms/DB/conddb" )
        db = rdbms.getReadOnlyDB( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO" )
        iov = conditionDatabase.IOVChecker( db )
        self.assertEqual( iov._db, db )
        self.assertEqual( iov._iovSequence, None )
        rdbms = condDB.RDBMS( "" )
        db = rdbms.getReadOnlyDB( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO" )
        iov = conditionDatabase.IOVChecker( db )
        self.assertEqual( iov._db, db )
        self.assertEqual( iov._iovSequence, None )
        #TODO: run the checks for a sqlite file

    def testLoadIOVSequence( self ):
        import pluginCondDBPyInterface as condDB
        rdbms = condDB.RDBMS( "/afs/cern.ch/cms/DB/conddb" )
        db = rdbms.getReadOnlyDB( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO" )
        iov = conditionDatabase.IOVChecker( db )
        iov.load( "RunInfo_v1_mc" )
        self.assertEqual( iov._tag, "RunInfo_v1_mc" )
        self.assertRaises( conditionError.ConditionError, iov.load, "RunInfo_dummy" )
        self.assertTrue( isinstance( iov._iovSequence, condDB.IOV ) )
        rdbms = condDB.RDBMS( "" )
        db = rdbms.getReadOnlyDB( "frontier://FrontierProd/CMS_COND_31X_RUN_INFO" )
        iov = conditionDatabase.IOVChecker( db )
        iov.load( "runinfo_31X_hlt" )
        self.assertEqual( iov._tag, "runinfo_31X_hlt" )
        self.assertTrue( isinstance( iov._iovSequence, condDB.IOV ) )
        self.assertRaises( conditionError.ConditionError, iov.load, "RunInfo_dummy" )
        db = rdbms.getReadOnlyDB( "frontier://FrontierProd/CMS_COND_INVALID" )
        iov = conditionDatabase.IOVChecker( db )
        self.assertRaises( conditionError.ConditionError, iov.load, "runinfo_31X_hlt" )
        #TODO: run the checks for a sqlite file
    
    def testIovCheckerFromConditionAPI( self ):
        import pluginCondDBPyInterface as condDB
        rdbms = condDB.RDBMS( "/afs/cern.ch/cms/DB/conddb" )
        db = rdbms.getReadOnlyDB( "oracle://cms_orcon_adg/CMS_COND_31X_RUN_INFO" )
        iov = conditionDatabase.IOVChecker( db )
        iov.load( "RunInfo_v0_offline" )
        allElements = iov.getAllElements()
        self.assertTrue( isinstance( allElements, list ) )
        self.assertNotEqual( len( allElements ), 0 )
        for elem in allElements:
            self.assertTrue( isinstance( elem, tuple ) )
            self.assertEqual( len( elem ), 2 )
            self.assertTrue( isinstance( elem[0], long ) )
            self.assertTrue( isinstance( elem[1], long ) )
        allSinces = iov.getAllSinceValues()
        self.assertTrue( isinstance( allSinces, list ) )
        self.assertNotEqual( len( allSinces ), 0 )
        for elem in allSinces:
            self.assertTrue( isinstance( elem, long ) )
        self.assertTrue( isinstance( iov.comment(), str ) )
        self.assertTrue( isinstance( iov.firstSince(), long ) )
        self.assertTrue( isinstance( iov.iovToken(), str ) )
        self.assertTrue( isinstance( iov.lastSince(), long ) )
        self.assertTrue( isinstance( iov.lastTill(), long ) )
        allPayloads = iov.payloadClasses()
        self.assertTrue( isinstance( allPayloads, tuple ) )
        self.assertNotEqual( len( allPayloads ), 0 )
        self.assertEqual( len( allPayloads ), 1 )
        for elem in allPayloads:
            self.assertTrue( isinstance( elem, str ) )
            self.assertEqual( elem, "RunInfo" )
        self.assertEqual( iov.payloadContainer(), "RunInfo" )
        self.assertTrue( isinstance( iov.revision(), int ) )
        self.assertNotEqual( iov.size(), 0 )
        self.assertTrue( isinstance( iov.timestamp(), str ) )
        self.assertTrue( isinstance( iov.timetype(), condDB.timetype ) )
        self.assertRaises( conditionError.ConditionError, iov.load, "RunInfo_dummy" )

if __name__ == '__main__':
    unittest.main()
